extend layout

head
    title Global Courier Services Appreation Site
block content
 section#main
    section#intro
      h1 Design Choices
      article
        p
          | The design for our website was decided during part 1 of the project; we based our individual static websites on delivery appreciation. After we finished our individual projects there was a conflict in colour scheme and designs. The colours differed with two members using brown related colouring scheme and the other using a blue/grey scheme. Both colours represented stability and both having relations to nature (brown relates to the earth or ground and blue relates to the sky and sea). As such both colour schemes were acceptable, however, we decided to use the majority's choice of brown due to it's relations to security and having a natural aspect with the image of parcels coming to mind when viewing the colours used. The site used various shades of brown in order to create a flow and allow for the maximisation of the rule of thirds providing a balanced website.
      article
        p
          | The next major difference was the navigation bars. Two members used horizontal navigation bars and the other using a vertical navigation bar. Both served the purpose of navigating the website but for the design we chose horizontal suited our needs and allowed us to create a more uniform and balanced website design. We used Shaun's pages as a basis for the design adding modifications to allow the text to be encompassed in another section allowing for increased readability. With that we changed the navigation bar to allow for the full width adding a simple logo above it from Trae's design with slight modification in order to allow for space at the top for user account creation and/or signing in. The navigation bar was also changed so that it's colour scheme matched the website's and allowed for seperation of functionality and content whilst being aesthetically pleasing.
        p
          | The comment section was designed around the basis of the person list presented in the lectures for the CITS3403 unit. This was helpful in providing a start point which we then altered with styling to look ore appealing as well as add in our own fields as we did not require some of the elements. We added a date function that creates and stores a date when you post a comment and then outputs this date to a date string when displaying on the comments list. We also stored a page field in the case that the comment section could be implemented into a smaller div and be displayed on all pages so that page comments differed. We decided in the end to leave it as a separate page which displays the functionality of the comments section.
        p
          | For the game we were required to change the game in such a way that the game only started from a particular button press instead of all buttons. This was required as we needed to submit the scores to save to the database, however, there was an issue where if you weren't careful you would skip over the end screen and reset the score variable and lose the data. We had problems passing the data straight from the JavaScript game and instead opted to pass the data to 'readonly' forms to display the final score and difficulty and provide a submit button which calls the post method to the database to update the scores for players. We decided to store the highest score for players in any particular difficulty and therefore upon account creation we initialise their individual scores to 0 for all 3 difficulties. These scores are later updated in the database upon submitting a score higher than the previous highest score a user achieves.
        p
          | We added a leaderboard functionality which takes the scores from the score database organising them in descending order and then limiting them to 10 so that we can display the top 10 scores achieved. As we had 3 differing difficulties we decided to display separate leaderboards labelled with a heading to show the different scores achieved across the 3 difficulties. We display the scores in a table showing the current rank, username of the person submitting and the score which they achieved. When a new high score is achieved the old one is pushed down and removed from the limit of 10.
        p
          | For an extension of sorts we added a chat implementation in which we added initially as a new tab/page, however, moved it to the game section so that people could chat in between games and its more convenient than having to change pages. We attempted to get the currently logged in user and store that in the collection with the message however we were unable to find a way to pull the user information into socket.io. We had some issues with styling the chat and limiting the different divs and sections so that the overflow of chat would stay consistent. We managed to achieve a majority of this and fix the issue with styling and got a good implementation that allows for visual separation fo chat messages to users can identify that the messages are separate.